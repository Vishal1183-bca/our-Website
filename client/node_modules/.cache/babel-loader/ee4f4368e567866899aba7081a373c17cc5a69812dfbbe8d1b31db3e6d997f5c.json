{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\OneDrive\\\\Desktop\\\\Project\\\\GIT\\\\our-Website\\\\client\\\\src\\\\components\\\\TiltCard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TiltCard = ({\n  children,\n  className = '',\n  style = {},\n  intensity = 15\n}) => {\n  _s();\n  const cardRef = useRef(null);\n  useEffect(() => {\n    const card = cardRef.current;\n    if (!card) return;\n    const handleMouseMove = e => {\n      const rect = card.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const centerX = rect.width / 2;\n      const centerY = rect.height / 2;\n      const rotateX = (y - centerY) / centerY * intensity;\n      const rotateY = (centerX - x) / centerX * intensity;\n      card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;\n      card.style.boxShadow = `${(centerX - x) / 5}px ${(y - centerY) / 5}px 30px rgba(0,0,0,0.2)`;\n    };\n    const handleMouseLeave = () => {\n      card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)';\n      card.style.boxShadow = '0 10px 20px rgba(0,0,0,0.1)';\n    };\n    card.addEventListener('mousemove', handleMouseMove);\n    card.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      card.removeEventListener('mousemove', handleMouseMove);\n      card.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [intensity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: cardRef,\n    className: `tilt-card ${className}`,\n    style: {\n      transition: 'all 0.1s ease-out',\n      transformStyle: 'preserve-3d',\n      ...style\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TiltCard, \"6u/bLyT0WzEP0A9aknmDXb+lDH8=\");\n_c = TiltCard;\nexport default TiltCard;\nvar _c;\n$RefreshReg$(_c, \"TiltCard\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","TiltCard","children","className","style","intensity","_s","cardRef","card","current","handleMouseMove","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","centerX","width","centerY","height","rotateX","rotateY","transform","boxShadow","handleMouseLeave","addEventListener","removeEventListener","ref","transition","transformStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/A/OneDrive/Desktop/Project/GIT/our-Website/client/src/components/TiltCard.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst TiltCard = ({ children, className = '', style = {}, intensity = 15 }) => {\n  const cardRef = useRef(null);\n\n  useEffect(() => {\n    const card = cardRef.current;\n    if (!card) return;\n\n    const handleMouseMove = (e) => {\n      const rect = card.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      \n      const centerX = rect.width / 2;\n      const centerY = rect.height / 2;\n      \n      const rotateX = ((y - centerY) / centerY) * intensity;\n      const rotateY = ((centerX - x) / centerX) * intensity;\n      \n      card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;\n      card.style.boxShadow = `${(centerX - x) / 5}px ${(y - centerY) / 5}px 30px rgba(0,0,0,0.2)`;\n    };\n\n    const handleMouseLeave = () => {\n      card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)';\n      card.style.boxShadow = '0 10px 20px rgba(0,0,0,0.1)';\n    };\n\n    card.addEventListener('mousemove', handleMouseMove);\n    card.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      card.removeEventListener('mousemove', handleMouseMove);\n      card.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [intensity]);\n\n  return (\n    <div\n      ref={cardRef}\n      className={`tilt-card ${className}`}\n      style={{\n        transition: 'all 0.1s ease-out',\n        transformStyle: 'preserve-3d',\n        ...style\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default TiltCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG,EAAE;EAAEC,KAAK,GAAG,CAAC,CAAC;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,OAAO,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE5BC,SAAS,CAAC,MAAM;IACd,MAAMU,IAAI,GAAGD,OAAO,CAACE,OAAO;IAC5B,IAAI,CAACD,IAAI,EAAE;IAEX,MAAME,eAAe,GAAIC,CAAC,IAAK;MAC7B,MAAMC,IAAI,GAAGJ,IAAI,CAACK,qBAAqB,CAAC,CAAC;MACzC,MAAMC,CAAC,GAAGH,CAAC,CAACI,OAAO,GAAGH,IAAI,CAACI,IAAI;MAC/B,MAAMC,CAAC,GAAGN,CAAC,CAACO,OAAO,GAAGN,IAAI,CAACO,GAAG;MAE9B,MAAMC,OAAO,GAAGR,IAAI,CAACS,KAAK,GAAG,CAAC;MAC9B,MAAMC,OAAO,GAAGV,IAAI,CAACW,MAAM,GAAG,CAAC;MAE/B,MAAMC,OAAO,GAAI,CAACP,CAAC,GAAGK,OAAO,IAAIA,OAAO,GAAIjB,SAAS;MACrD,MAAMoB,OAAO,GAAI,CAACL,OAAO,GAAGN,CAAC,IAAIM,OAAO,GAAIf,SAAS;MAErDG,IAAI,CAACJ,KAAK,CAACsB,SAAS,GAAG,+BAA+BF,OAAO,gBAAgBC,OAAO,gCAAgC;MACpHjB,IAAI,CAACJ,KAAK,CAACuB,SAAS,GAAG,GAAG,CAACP,OAAO,GAAGN,CAAC,IAAI,CAAC,MAAM,CAACG,CAAC,GAAGK,OAAO,IAAI,CAAC,yBAAyB;IAC7F,CAAC;IAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;MAC7BpB,IAAI,CAACJ,KAAK,CAACsB,SAAS,GAAG,kEAAkE;MACzFlB,IAAI,CAACJ,KAAK,CAACuB,SAAS,GAAG,6BAA6B;IACtD,CAAC;IAEDnB,IAAI,CAACqB,gBAAgB,CAAC,WAAW,EAAEnB,eAAe,CAAC;IACnDF,IAAI,CAACqB,gBAAgB,CAAC,YAAY,EAAED,gBAAgB,CAAC;IAErD,OAAO,MAAM;MACXpB,IAAI,CAACsB,mBAAmB,CAAC,WAAW,EAAEpB,eAAe,CAAC;MACtDF,IAAI,CAACsB,mBAAmB,CAAC,YAAY,EAAEF,gBAAgB,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACvB,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA;IACE+B,GAAG,EAAExB,OAAQ;IACbJ,SAAS,EAAE,aAAaA,SAAS,EAAG;IACpCC,KAAK,EAAE;MACL4B,UAAU,EAAE,mBAAmB;MAC/BC,cAAc,EAAE,aAAa;MAC7B,GAAG7B;IACL,CAAE;IAAAF,QAAA,EAEDA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAjDIL,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}