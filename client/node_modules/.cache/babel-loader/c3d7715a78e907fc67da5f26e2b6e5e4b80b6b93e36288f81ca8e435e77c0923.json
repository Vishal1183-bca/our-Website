{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\A\\\\OneDrive\\\\Desktop\\\\Project\\\\GIT\\\\our-Website\\\\client\\\\src\\\\components\\\\ChatWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWidget = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hi! How can I help you today?\",\n    sender: \"bot\",\n    time: new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const quickReplies = [\"Get a quote\", \"Our services\", \"Contact info\", \"Portfolio\"];\n  const handleSendMessage = () => {\n    if (inputMessage.trim()) {\n      const newMessage = {\n        id: messages.length + 1,\n        text: inputMessage,\n        sender: \"user\",\n        time: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setMessages([...messages, newMessage]);\n      setInputMessage('');\n\n      // Auto-reply after 1 second\n      setTimeout(() => {\n        const botReply = {\n          id: messages.length + 2,\n          text: \"Thanks for your message! Our team will get back to you shortly. You can also call us at +91-XXXXXXXXXX or email us at info@yourcompany.com\",\n          sender: \"bot\",\n          time: new Date().toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        };\n        setMessages(prev => [...prev, botReply]);\n      }, 1000);\n    }\n  };\n  const handleQuickReply = reply => {\n    const newMessage = {\n      id: messages.length + 1,\n      text: reply,\n      sender: \"user\",\n      time: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setMessages([...messages, newMessage]);\n\n    // Auto-reply based on quick reply\n    setTimeout(() => {\n      let botResponse = \"\";\n      switch (reply) {\n        case \"Get a quote\":\n          botResponse = \"I'd be happy to help you get a quote! Please visit our Contact page or call us at +91-XXXXXXXXXX to discuss your project requirements.\";\n          break;\n        case \"Our services\":\n          botResponse = \"We offer Web Development, Desktop Applications, UI/UX Design, and Online Branding services. Which service interests you?\";\n          break;\n        case \"Contact info\":\n          botResponse = \"📞 Phone: +91-XXXXXXXXXX\\n📧 Email: info@yourcompany.com\\n📍 Location: Vadodara, Gujarat\";\n          break;\n        case \"Portfolio\":\n          botResponse = \"You can view our amazing work in the Portfolio section of our website. We've completed 20+ projects with 100% client satisfaction!\";\n          break;\n        default:\n          botResponse = \"Thanks for your interest! How can I assist you further?\";\n      }\n      const botReply = {\n        id: messages.length + 2,\n        text: botResponse,\n        sender: \"bot\",\n        time: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setMessages(prev => [...prev, botReply]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-button ${isOpen ? 'open' : ''}`,\n      onClick: () => setIsOpen(!isOpen),\n      children: isOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-headset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Customer Support\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-status\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-replies\",\n        children: quickReplies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quick-reply-btn\",\n          onClick: () => handleQuickReply(reply),\n          children: reply\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatWidget, \"iebquTlV8CTcHj+k9dBt7YqLzCI=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWidget","_s","isOpen","setIsOpen","messages","setMessages","id","text","sender","time","Date","toLocaleTimeString","hour","minute","inputMessage","setInputMessage","quickReplies","handleSendMessage","trim","newMessage","length","setTimeout","botReply","prev","handleQuickReply","reply","botResponse","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["c:/Users/A/OneDrive/Desktop/Project/GIT/our-Website/client/src/components/ChatWidget.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ChatWidget = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    { id: 1, text: \"Hi! How can I help you today?\", sender: \"bot\", time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n\n  const quickReplies = [\n    \"Get a quote\",\n    \"Our services\",\n    \"Contact info\",\n    \"Portfolio\"\n  ];\n\n  const handleSendMessage = () => {\n    if (inputMessage.trim()) {\n      const newMessage = {\n        id: messages.length + 1,\n        text: inputMessage,\n        sender: \"user\",\n        time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n      };\n      \n      setMessages([...messages, newMessage]);\n      setInputMessage('');\n      \n      // Auto-reply after 1 second\n      setTimeout(() => {\n        const botReply = {\n          id: messages.length + 2,\n          text: \"Thanks for your message! Our team will get back to you shortly. You can also call us at +91-XXXXXXXXXX or email us at info@yourcompany.com\",\n          sender: \"bot\",\n          time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n        };\n        setMessages(prev => [...prev, botReply]);\n      }, 1000);\n    }\n  };\n\n  const handleQuickReply = (reply) => {\n    const newMessage = {\n      id: messages.length + 1,\n      text: reply,\n      sender: \"user\",\n      time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n    };\n    \n    setMessages([...messages, newMessage]);\n    \n    // Auto-reply based on quick reply\n    setTimeout(() => {\n      let botResponse = \"\";\n      switch(reply) {\n        case \"Get a quote\":\n          botResponse = \"I'd be happy to help you get a quote! Please visit our Contact page or call us at +91-XXXXXXXXXX to discuss your project requirements.\";\n          break;\n        case \"Our services\":\n          botResponse = \"We offer Web Development, Desktop Applications, UI/UX Design, and Online Branding services. Which service interests you?\";\n          break;\n        case \"Contact info\":\n          botResponse = \"📞 Phone: +91-XXXXXXXXXX\\n📧 Email: info@yourcompany.com\\n📍 Location: Vadodara, Gujarat\";\n          break;\n        case \"Portfolio\":\n          botResponse = \"You can view our amazing work in the Portfolio section of our website. We've completed 20+ projects with 100% client satisfaction!\";\n          break;\n        default:\n          botResponse = \"Thanks for your interest! How can I assist you further?\";\n      }\n      \n      const botReply = {\n        id: messages.length + 2,\n        text: botResponse,\n        sender: \"bot\",\n        time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n      };\n      setMessages(prev => [...prev, botReply]);\n    }, 1000);\n  };\n\n  return (\n    <>\n      {/* Chat Button */}\n      <div \n        className={`chat-button ${isOpen ? 'open' : ''}`}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {isOpen ? (\n          <i className=\"fas fa-times\"></i>\n        ) : (\n          <i className=\"fas fa-comments\"></i>\n        )}\n      </div>\n\n      {/* Chat Widget */}\n      {isOpen && (\n        <div className=\"chat-widget\">\n          <div className=\"chat-header\">\n            <div className=\"chat-header-info\">\n              <div className=\"chat-avatar\">\n                <i className=\"fas fa-headset\"></i>\n              </div>\n              <div>\n                <h4>Customer Support</h4>\n                <span className=\"online-status\">Online</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chat-messages\">\n            {messages.map((message) => (\n              <div key={message.id} className={`message ${message.sender}`}>\n                <div className=\"message-content\">\n                  <p>{message.text}</p>\n                  <span className=\"message-time\">{message.time}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"quick-replies\">\n            {quickReplies.map((reply, index) => (\n              <button \n                key={index}\n                className=\"quick-reply-btn\"\n                onClick={() => handleQuickReply(reply)}\n              >\n                {reply}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"chat-input\">\n            <input\n              type=\"text\"\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n            />\n            <button onClick={handleSendMessage}>\n              <i className=\"fas fa-paper-plane\"></i>\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}